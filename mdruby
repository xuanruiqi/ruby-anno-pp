#! /usr/bin/python3
# -*- coding: utf-8 -*-
import re
import sys
import os
import codecs

ruby_re = re.compile('[\[（【(]([\u4e00-\u9fff\u3040-\u30ff]+)[\]）】)][{｛]([^}｝]+)[}｝]', flags=re.UNICODE)

def main(argv):
    in_f = None
    if argv and argv[0] == '-h':
        help()
    elif argv:
        try:
            in_f = open(argv[0], 'r', encoding='utf-8')
        except IOError:
            print('Invalid file name: ', argv[0])
            sys.exit(1)
    else:
        help()
    text = in_f.read()
    print(transform(text))

def help():
    print('Usage: mdruby [infile]\n',
          '"mdruby -h" displays this message')
    sys.exit(0)

def transform(text):
    match = ruby_re.finditer(text)
    base_texts, anno_texts = [], []
    for m in match:
        base_texts.append(m.group(1))
        anno_texts.append(m.group(2))
    if base_texts:
        for base_text, anno_text in zip(base_texts, anno_texts) :
            text = ruby_re.sub('<ruby><rb>' + base_text + 
                               '</rb><rp>(</rp><rt>' + 
                               anno_text + 
                               '</rt><rp>)</rp></ruby>', text, 1)
    return text

if __name__ == '__main__':
    main(sys.argv[1:])